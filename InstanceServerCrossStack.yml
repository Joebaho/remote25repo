---
# This template will be my main one. It will be use for all my testing template. 
AWSTemplateFormatVersion: '2010-09-09'
Description : > 
    " This tempate will be use to launch an EC2 instance in us-west-2 region the we will use it to launch a codepipeline 
    intergrate also some parameters , mapping and outputs in the end. "

Metadata: 
 Authors:
    Description: Joseph Mbatchou  # The writer of this template

Parameters:
  InstanceType:
    Description: WebServer EC2 instance type (has default, AllowedValues)
    Type: String
    AllowedValues: # choose between all t2 category 
      - t2.large
      - t2.nano
      - t2.micro
      - t2.small
      - t2.xlarge
      - t2.2xlarge
      - t2.medium
  KeyName:
    Description: Name of an existing EC2 key pair for SSH access to the EC2 instance.
    Type: AWS::EC2::KeyPair::KeyName
  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType # Nothing is hardcoded
      KeyName: !Ref KeyName
      SecurityGroupIds:  # import Security group from the CLaudio template
        - !ImportValue
            SampleNetworkCrossStack-SecurityGroupID   #This can be choose or the second one
      SubnetId: # Import the Subnet ID from the SampleNetworkCroosStack template 
          !ImportValue 'SampleNetworkCrossStack-SubnetID'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<html><body><h1>WELCOME TO CLOUDFORMATION</h1><br>You successfully access Joseph Mbatchou web page launched via a CloudFormation template in ${AWS::Region} region</h1></body></html>" > /var/www/html/index.html
      Tags:
       - Key: Name
         Value: EC2-Cross-stack-reference

  MyEIP:
    Type: AWS::EC2::EIP # Allocate an Elastic IP address
    Properties:
      InstanceId: !Ref MyEC2Instance          
Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !GetAtt MyEC2Instance.PublicIp # return the ip addr
  
  PrivateDnsName:
   Description: Display the Dns Name of the EC2 MyEC2Instance
   Value: !GetAtt MyEC2Instance.PrivateDnsName
   Export: 
    Name: !Sub '${AWS::StackName}-MyEC2Instance1'

  PublicDnsName:
   Description: Display the Dns Name of the EC2 MyEC2Instance
   Value: !GetAtt MyEC2Instance.PublicDnsName
   Export: 
    Name: !Sub '${AWS::StackName}-MyEC2Instance2'   